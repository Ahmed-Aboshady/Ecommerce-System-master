@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<ul class="navbar-nav mt-4">
@if (SignInManager.IsSignedIn(User))
{
    @*get the Id of the currently logged in user
        <p>@UserManager.GetUserId(User)</p>
        <p>@UserManager.FindByIdAsync(@UserManager.GetUserId(User)).Result.Name</p>
    *@
    
    
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" asp-route-returnUrl="@Url.Action("Index", "Hemalaya", new { area = "" })" title="Manage">Hello @UserManager.FindByIdAsync(@UserManager.GetUserId(User)).Result.Name!</a>
    </li>
    @*Display User Orders*@
    <li>
        <a class="nav-link text-dark" asp-action="Orders" asp-controller="MyOrder" asp-area="User">My Orders</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Hemalaya", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
